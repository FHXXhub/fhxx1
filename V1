local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "FHXX HUB | https://discord.gg/KG7Fh4dcBv",
   LoadingTitle = "FHXX HUB",
   LoadingSubtitle = "Made By FHXX",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "FHXX HUB"
   },
   Discord = {
      Enabled = true,
      Invite = "https://discord.gg/KG7Fh4dcBv", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = false -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "FHXX Key System",
      Subtitle = "Key System",
      Note = "Get Key At https://discord.gg/KG7Fh4dcBv",
      FileName = "FHXX HUB KEY", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = false, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raw/VfcJfAgN"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("Info", nil) -- Title, Image
local MainSection = MainTab:CreateSection("Info")

local PlayerTab = Window:CreateTab("Player", nil) -- Title, Image
local PlayerSection = MainTab:CreateSection("Player")

local AimLockTab = Window:CreateTab("AimLock", nil) -- Title, Image
local AimLockSection = MainTab:CreateSection("AimLock")

local ESPTab = Window:CreateTab("ESP", nil) -- Title, Image
local ESPSection = MainTab:CreateSection("ESP")

Rayfield:Notify({
   Title = "Join FHXX Scripts Discord",
   Content = "https://discord.gg/KG7Fh4dcBv",
   Duration = 9,
   Image = nil,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
            print("The user tapped Okay!")
         end
      },
   },
})

local Button = PlayerTab:CreateButton({
   Name = "Infinite Jump",
   Callback = function()
      local uis = game:GetService("UserInputService")
      local jumpEnabled = true

      uis.InputBegan:Connect(function(input)
         if input.KeyCode == Enum.KeyCode.Space and jumpEnabled then
            local player = game.Players.LocalPlayer
            if player and player.Character and player.Character:FindFirstChild("Humanoid") then
               player.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
         end
      end)
   end,
})

local Slider = PlayerTab:CreateSlider({
   Name = "Walk Speed",
   Range = {0, 100},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
   end,
})

local Button = AimLockTab:CreateButton({
   Name = "AimLock Key Is Q",
   Callback = function()
            local players = game:GetService("Players")
local uis = game:GetService("UserInputService")
local runService = game:GetService("RunService")

local aimbotEnabled = false
local targetLocked = false
local currentTarget = nil

local function aimAt(target)
    local camera = workspace.CurrentCamera
    local startPos = camera.CFrame.Position
    local endPos = target.Character.Head.Position
    camera.CFrame = CFrame.new(startPos, endPos)
end

local function lockOnTarget()
    local mouseLocation = uis:GetMouseLocation()
    local closestPlayer
    local shortestDistance = math.huge

    for _, player in pairs(players:GetPlayers()) do
        if player ~= players.LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
            local headPos = player.Character.Head.Position
            local screenPos, onScreen = workspace.CurrentCamera:WorldToViewportPoint(headPos)
            if onScreen then
                local distance = (Vector2.new(screenPos.X, screenPos.Y) - mouseLocation).magnitude
                if distance < shortestDistance then
                    closestPlayer = player
                    shortestDistance = distance
                end
            end
        end
    end

    currentTarget = closestPlayer
end

uis.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.Q then
        if targetLocked then
            targetLocked = false
            currentTarget = nil
            print("Aimlock Disabled")
        else
            targetLocked = true
            lockOnTarget()
            print("Aimlock Enabled")
        end
    end
end)

runService.RenderStepped:Connect(function()
    if targetLocked and currentTarget and currentTarget.Character and currentTarget.Character:FindFirstChild("Head") then
        aimAt(currentTarget)
    end
end)

   end,
})
